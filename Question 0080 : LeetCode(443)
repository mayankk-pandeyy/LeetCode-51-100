class Solution {
public:
    int compress(vector<char>& chars) {
        int index = 0;
        char prev = chars[0];
        int count = 1;
        for(int i=1; i<chars.size(); i++){
            if(prev == chars[i]){
                count++;
            }else if(count > 1 && prev != chars[i]){
                chars[index++] = prev;
                int start = index;
                while(count){
                    char digit = count%10 + '0';
                    chars[index++] = digit;
                    count = count/10;
                }
                reverse(chars.begin()+start, chars.begin()+index);
                count = 1;
                prev = chars[i];
            }else if(prev != chars[i] && count == 1){
                chars[index++] = prev;
                prev = chars[i];
            }
        }
        chars[index++] = prev;
        if(count > 1){
            int start = index;
            while(count){
                char digit = count%10 + '0';
                chars[index++] = digit;
                count = count/10;
            }
            reverse(chars.begin()+start, chars.begin()+index);
        }
            return index;
    }
};
